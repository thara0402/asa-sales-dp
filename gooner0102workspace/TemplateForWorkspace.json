{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "gooner0102workspace"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"gooner0102workspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'gooner0102workspace-WorkspaceDefaultSqlServer'"
		},
		"AzureSqlDatabaseSales_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseSales'"
		},
		"gooner0102workspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gooner0102lake.dfs.core.windows.net"
		},
		"TriggerA_properties_pipeline_parameters_store": {
			"type": "string",
			"defaultValue": "store-aaa"
		},
		"TriggerA_properties_pipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineBlobXmlToAdlsParquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopyBlobXmlToAdlsParquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.xml",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['order_date']"
										},
										"sink": {
											"name": "order_date",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"path": "[['customer_code']"
										},
										"sink": {
											"name": "customer_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['product_code']"
										},
										"sink": {
											"name": "product_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['unit_price']"
										},
										"sink": {
											"name": "unit_price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['quantity']"
										},
										"sink": {
											"name": "quantity",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['dataset']['record']"
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetBlobXml",
								"type": "DatasetReference",
								"parameters": {
									"store": {
										"value": "@pipeline().parameters.store",
										"type": "Expression"
									},
									"folderPath": "@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetAdlsParquet",
								"type": "DatasetReference",
								"parameters": {
									"store": {
										"value": "@pipeline().parameters.store",
										"type": "Expression"
									},
									"folderPath": "@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
								}
							}
						]
					}
				],
				"parameters": {
					"store": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DatasetBlobXml')]",
				"[concat(variables('workspaceId'), '/datasets/DatasetAdlsParquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DatasetAdlsParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gooner0102workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"store": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().store",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gooner0102workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DatasetBlobXml')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"store": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().store",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gooner0102workspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('gooner0102workspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gooner0102workspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('gooner0102workspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLDW1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TriggerA')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PipelineBlobXmlToAdlsParquet",
						"type": "PipelineReference"
					},
					"parameters": {
						"store": "[parameters('TriggerA_properties_pipeline_parameters_store')]",
						"windowStart": "[parameters('TriggerA_properties_pipeline_parameters_windowStart')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-01-01T15:00:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PipelineBlobXmlToAdlsParquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabaseSales')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseSales_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DatasetSqlCustomer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseSales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerCode",
						"type": "nvarchar"
					},
					{
						"name": "StandardCode",
						"type": "nvarchar"
					},
					{
						"name": "StandardName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerView"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabaseSales')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DatasetSqlPoolSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				},
				"sqlPool": {
					"referenceName": "SQLDW1",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/SQLDW1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DataflowParquetToSqlPool')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "SourceParquetSales"
						},
						{
							"dataset": {
								"referenceName": "DatasetSqlCustomer",
								"type": "DatasetReference"
							},
							"name": "SourceSqlCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DatasetDedicatedSqlPoolSales",
								"type": "DatasetReference"
							},
							"name": "SinkSqlPoolSales"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "Select"
						}
					],
					"script": "parameters{\n\tstore as string,\n\tfolderPath as string\n}\nsource(output(\n\t\tid as long,\n\t\torder_date as timestamp,\n\t\tcustomer_code as string,\n\t\tproduct_code as string,\n\t\tunit_price as decimal(38,18),\n\t\tquantity as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['2021/01/01']) ~> SourceParquetSales\nsource(output(\n\t\tCustomerCode as string,\n\t\tStandardCode as string,\n\t\tStandardName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlCustomer\nSourceParquetSales, SourceSqlCustomer join(customer_code == CustomerCode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join\nJoin select(mapColumn(\n\t\tID = id,\n\t\tOrderDate = order_date,\n\t\tCustomerCode = customer_code,\n\t\tProductCode = product_code,\n\t\tUnitPrice = unit_price,\n\t\tQuantity = quantity,\n\t\tStandardCustomerCode = StandardCode,\n\t\tStandardCustomerName = StandardName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkSqlPoolSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]",
				"[concat(variables('workspaceId'), '/datasets/DatasetSqlCustomer')]",
				"[concat(variables('workspaceId'), '/datasets/DatasetDedicatedSqlPoolSales')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gooner0102workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "2021/01/02",
						"fileSystem": "store-aaa"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT64"
					},
					{
						"name": "order_date",
						"type": "INT96"
					},
					{
						"name": "customer_code",
						"type": "UTF8"
					},
					{
						"name": "product_code",
						"type": "UTF8"
					},
					{
						"name": "unit_price",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "quantity",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gooner0102workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DatasetDedicatedSqlPoolSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gooner0102workspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "SQLDW1"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gooner0102workspace-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineParquetToSqlPool')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DataflowParquetToSqlPool",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataflowParquetToSqlPool",
								"type": "DataFlowReference",
								"parameters": {
									"store": {
										"value": "'@{pipeline().parameters.store}'",
										"type": "Expression"
									},
									"folderPath": {
										"value": "'@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceParquetSales": {},
									"SourceSqlCustomer": {},
									"SinkSqlPoolSales": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "gooner0102workspace-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"parameters": {
					"store": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DataflowParquetToSqlPool')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/gooner0102workspace-WorkspaceDefaultStorage')]"
			]
		}
	]
}