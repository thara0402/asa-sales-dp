{
	"name": "PipelineBlobXmlToAdlsParquet",
	"properties": {
		"activities": [
			{
				"name": "CopyBlobXmlToAdlsParquet",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Check Xml Exsits",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "XmlSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.xml",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "XmlReadSettings",
							"validationMode": "none",
							"namespaces": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "id",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "['order_date']"
								},
								"sink": {
									"name": "order_date",
									"type": "DateTimeOffset"
								}
							},
							{
								"source": {
									"path": "['customer_code']"
								},
								"sink": {
									"name": "customer_code",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['product_code']"
								},
								"sink": {
									"name": "product_code",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['unit_price']"
								},
								"sink": {
									"name": "unit_price",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "['quantity']"
								},
								"sink": {
									"name": "quantity",
									"type": "Int64"
								}
							}
						],
						"collectionReference": "$['dataset']['record']"
					}
				},
				"inputs": [
					{
						"referenceName": "DatasetBlobXmlSales",
						"type": "DatasetReference",
						"parameters": {
							"store": {
								"value": "@pipeline().parameters.store",
								"type": "Expression"
							},
							"folderPath": {
								"value": "@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DatasetAdlsParquetSales",
						"type": "DatasetReference",
						"parameters": {
							"store": {
								"value": "@pipeline().parameters.store",
								"type": "Expression"
							},
							"folderPath": "@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
						}
					}
				]
			},
			{
				"name": "Check Xml Exsits",
				"type": "Validation",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DatasetBlobXmlSales",
						"type": "DatasetReference",
						"parameters": {
							"store": {
								"value": "@pipeline().parameters.store",
								"type": "Expression"
							},
							"folderPath": {
								"value": "@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}",
								"type": "Expression"
							}
						}
					},
					"timeout": "0.00:00:10",
					"sleep": 10,
					"childItems": true
				}
			},
			{
				"name": "No Files Available",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Check Xml Exsits",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			}
		],
		"parameters": {
			"store": {
				"type": "string"
			},
			"windowStart": {
				"type": "string"
			}
		},
		"annotations": []
	}
}